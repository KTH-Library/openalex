[{"path":"https://kth-library.github.io/openalex/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 openalex authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kth-library.github.io/openalex/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Markus Skyttner. Maintainer, author.","code":""},{"path":"https://kth-library.github.io/openalex/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Skyttner M (2025). openalex: Data OpenAlex REST API. R package version 0.0.5, https://kth-library.github.io/openalex/.","code":"@Manual{,   title = {openalex: Data from OpenAlex REST API},   author = {Markus Skyttner},   year = {2025},   note = {R package version 0.0.5},   url = {https://kth-library.github.io/openalex/}, }"},{"path":"https://kth-library.github.io/openalex/index.html","id":"openalex","dir":"","previous_headings":"","what":"Data from OpenAlex REST API","title":"Data from OpenAlex REST API","text":"goal openalex provide access data OpenAlex - open comprehensive catalog scholarly papers, authors, institutions … - R Open Alex REST API…","code":""},{"path":"https://kth-library.github.io/openalex/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data from OpenAlex REST API","text":"can install current version openalex GitHub :","code":"#install.packages(\"devtools\") devtools::install_github(\"kth-library/openalex\", dependencies = TRUE)"},{"path":"https://kth-library.github.io/openalex/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Data from OpenAlex REST API","text":"basic example shows get information papers authors:","code":"library(openalex) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union suppressPackageStartupMessages(library(purrr)) library(knitr)  iid <-    openalex:::openalex_autocomplete(     query = \"Royal Institute of Technology\",      entity_type = \"institution\",      format = \"table\") |>    head(1) |>    pull(\"id\") #> Requesting url: https://api.openalex.org/autocomplete/institutions?q=Royal%20Institute%20of%20Technology  data <-    openalex_crawl(entity = \"works\", verbose = TRUE, fmt = \"tables\",     query = openalex:::openalex_query(filter =       sprintf(\"institutions.id:%s,publication_year:2025\", iid))) #> About to crawl a total of 11 pages of results with a total of 257 records. #>  ■■■■■■■■■                         27% |  ETA:  3s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      91% |  ETA:  0s  res <- data |> map(head)  # return only first six rows from each table  res #> $work #> # A tibble: 6 × 13 #>   id          doi     display_name title publication_year publication_date type  #>   <chr>       <chr>   <chr>        <chr>            <int> <date>           <chr> #> 1 W4405989080 https:… Molecular b… Mole…             2025 2025-01-01       arti… #> 2 W4406001145 https:… Tracking th… Trac…             2025 2025-01-02       arti… #> 3 W4406016239 https:… DGCR2 targe… DGCR…             2025 2025-01-02       arti… #> 4 W4406082819 https:… Screening a… Scre…             2025 2025-01-05       arti… #> 5 W4406172907 https:… Static deep… Stat…             2025 2025-01-01       arti… #> 6 W4406435778 https:… Consistent,… Cons…             2025 2025-01-16       arti… #> # ℹ 6 more variables: cited_by_count <int>, is_retracted <lgl>, #> #   is_paratext <lgl>, updated_date <dttm>, cited_by_api_url <chr>, #> #   created_date <date> #>  #> $work_ids #> # A tibble: 6 × 3 #>   work_id     doi                                          pmid                  #>   <chr>       <chr>                                        <chr>                 #> 1 W4405989080 https://doi.org/10.1016/j.cell.2024.11.036   https://pubmed.ncbi.… #> 2 W4406001145 https://doi.org/10.1038/s41467-024-55688-8   https://pubmed.ncbi.… #> 3 W4406016239 https://doi.org/10.1038/s41598-024-84574-y   https://pubmed.ncbi.… #> 4 W4406082819 https://doi.org/10.1186/s12896-024-00926-6   https://pubmed.ncbi.… #> 5 W4406172907 https://doi.org/10.1063/5.0248856            <NA>                  #> 6 W4406435778 https://doi.org/10.21468/scipostphyscodeb.45 <NA>                  #>  #> $work_concepts #> # A tibble: 6 × 6 #>   work_id     id         wikidata                       display_name level score #>   <chr>       <chr>      <chr>                          <chr>        <int> <dbl> #> 1 W4405989080 C86803240  https://www.wikidata.org/wiki… Biology          0 0.928 #> 2 W4405989080 C170493617 https://www.wikidata.org/wiki… Receptor         2 0.615 #> 3 W4405989080 C70721500  https://www.wikidata.org/wiki… Computation…     1 0.466 #> 4 W4405989080 C12426560  https://www.wikidata.org/wiki… Basis (line…     2 0.455 #> 5 W4405989080 C135285700 https://www.wikidata.org/wiki… G protein-c…     3 0.449 #> 6 W4405989080 C95444343  https://www.wikidata.org/wiki… Cell biology     1 0.389 #>  #> $work_authorships_institutions #> # A tibble: 6 × 12 #>   work_id     id      display_name ror   country_code type  lineage wa_countries #>   <chr>       <chr>   <chr>        <chr> <chr>        <chr> <list>  <list>       #> 1 W4405989080 I18067… University … http… US           fund… <list>  <list [1]>   #> 2 W4405989080 I18067… University … http… US           fund… <list>  <list [1]>   #> 3 W4405989080 I11402… University … http… US           fund… <list>  <list [1]>   #> 4 W4405989080 I42101… National In… http… US           fund… <list>  <list [1]>   #> 5 W4405989080 I28001… Science for… http… SE           fund… <list>  <list [1]>   #> 6 W4405989080 I86987… KTH Royal I… http… SE           fund… <list>  <list [1]>   #> # ℹ 4 more variables: wa_is_corresponding <lgl>, wa_raw_author_name <chr>, #> #   wa_raw_affiliation_strings <list>, wa_affiliations <list> #>  #> $work_abstract_inverted_index #> # A tibble: 6 × 3 #>   work_id     aii_value                                                  aii_key #>   <chr>       <chr>                                                      <chr>   #> 1 W4405989080 <NA>                                                       <NA>    #> 2 W4406001145 0 1 8 15 19 23 44 60 81 86 90 99 106 123 127 138 149 166 … Regula… #> 3 W4406016239 <NA>                                                       <NA>    #> 4 W4406082819 0 1 2 252 279 3 26 69 77 114 118 134 142 164 193 198 211 … Abstra… #> 5 W4406172907 0 1 88 2 3 12 4 5 6 7 8 58 9 59 10 60 11 13 14 15 20 35 6… As com… #> 6 W4406435778 0 1 55 67 2 3 4 51 87 5 6 7 64 83 96 103 8 9 17 23 44 50 … Histog… #>  #> $work_authorships_author #> # A tibble: 6 × 10 #>   work_id     wa_author_position id          display_name     orcid wa_countries #>   <chr>       <chr>              <chr>       <chr>            <chr> <list>       #> 1 W4405989080 first              A5035848333 Matthew K. Howa… http… <list [1]>   #> 2 W4405989080 middle             A5106732468 Nick Hoppe       http… <list [1]>   #> 3 W4405989080 middle             A5089436626 Xi‐Ping Huang    http… <list [1]>   #> 4 W4405989080 middle             A5063488695 Darko Mitrovic   http… <list [1]>   #> 5 W4405989080 middle             A5036507080 Christian B. Bi… http… <list [1]>   #> 6 W4405989080 middle             A5080561155 Christian B. Ma… http… <list [1]>   #> # ℹ 4 more variables: wa_is_corresponding <lgl>, wa_raw_author_name <chr>, #> #   wa_raw_affiliation_strings <list>, wa_affiliations <list> #>  #> $work_biblio #> # A tibble: 6 × 5 #>   work_id     volume issue first_page last_page #>   <chr>        <dbl> <chr> <chr>      <chr>     #> 1 W4405989080     NA <NA>  <NA>       <NA>      #> 2 W4406001145     16 1     <NA>       <NA>      #> 3 W4406016239     15 1     <NA>       <NA>      #> 4 W4406082819     25 1     <NA>       <NA>      #> 5 W4406172907     37 1     <NA>       <NA>      #> 6 W4406435778     NA <NA>  <NA>       <NA>      #>  #> $work_open_access #> # A tibble: 6 × 5 #>   work_id     is_oa oa_status oa_url                      any_repository_has_f…¹ #>   <chr>       <lgl> <chr>     <chr>                       <lgl>                  #> 1 W4405989080 TRUE  green     https://doi.org/10.1101/20… TRUE                   #> 2 W4406001145 TRUE  gold      https://doi.org/10.1038/s4… FALSE                  #> 3 W4406016239 TRUE  gold      https://doi.org/10.1038/s4… FALSE                  #> 4 W4406082819 TRUE  gold      https://doi.org/10.1186/s1… FALSE                  #> 5 W4406172907 TRUE  hybrid    https://doi.org/10.1063/5.… FALSE                  #> 6 W4406435778 TRUE  hybrid    https://doi.org/10.21468/s… TRUE                   #> # ℹ abbreviated name: ¹​any_repository_has_fulltext #>  #> $work_host_venue #> # A tibble: 6 × 1 #>   work_id     #>   <chr>       #> 1 W4405989080 #> 2 W4406001145 #> 3 W4406016239 #> 4 W4406082819 #> 5 W4406172907 #> 6 W4406435778 #>  #> $work_counts_by_year #> # A tibble: 6 × 3 #>   work_id      year cited_by_count #>   <chr>       <int>          <int> #> 1 W4405989080  2025              1 #> 2 W4406001145  2025              1 #> 3 W4406082819  2025              1 #> 4 W4406172907  2025              1 #> 5 W4406435778  2025              1 #> 6 W4406435863  2025              1 #>  #> $work_related_works #> # A tibble: 6 × 2 #>   work_id     related_works #>   <chr>       <chr>         #> 1 W4405989080 W4391375266   #> 2 W4405989080 W4224216382   #> 3 W4405989080 W416861399    #> 4 W4405989080 W3195483439   #> 5 W4405989080 W3011298851   #> 6 W4405989080 W2609050007   #>  #> $work_referenced_works #> # A tibble: 6 × 2 #>   work_id     referenced_works #>   <chr>       <chr>            #> 1 W4405989080 W1031578623      #> 2 W4405989080 W1483147211      #> 3 W4405989080 W1503765703      #> 4 W4405989080 W1513618424      #> 5 W4405989080 W1833104430      #> 6 W4405989080 W189880865"},{"path":"https://kth-library.github.io/openalex/index.html","id":"rate-limits-and-using-an-api-key","dir":"","previous_headings":"","what":"Rate limits and using an API key","title":"Data from OpenAlex REST API","text":"providing email address enter “polite pool” provides even less rate limiting API requests. can provide ~/.Renviron setting OPENALEX_USERAGENT=http://github.com/hadley/httr (mailto:your_email@your_institution.org). can also set just session using helper fcn openalex_polite() temporarily set unset email used user agent string making API requests: premium subscription API key can used setting OPENALEX_KEY=secret_premium_api_key .Renviron, temporarily session using: make possible make API calls return latest available records, example based recent creation dates recent last modification timestamps.","code":"library(openalex)  # set an email to use for the session  openalex_polite(\"you@example.com\") #> Hint: You can provide an email to enter the polite pool #> To have the setting stick persistently using .Renviron, do ... #>   file.edit(\"~/.Renviron\") #>   # and add a line OPENALEX_USERAGENT=\"http://github.com/hadley/httr (mailto:you@example.com)\" #> Then reload settings for the R environment in the current session #>   readRenviron(\"~/.Renviron\") #> Temporarily setting OPENALEX_USERAGENT envvar for this session to: http://github.com/hadley/httr (mailto:you@example.com) #> [1] TRUE  # unset, and use default user agent string...  openalex_polite(\"\") #> Exiting from polite pool, email no longer provided in user agent header #> [1] FALSE library(openalex)  # temporarily use a premium subscription API key openalex_key(\"secret_premium_api_key\")  # unset to not use the premium subscription API key openalex_key(\"\") # we do not require an API key for the publish date published_since_ <- openalex_works_published_since(since_days = 7) #> About to crawl a total of 1 pages of results with a total of 21 records. #> Warning: `type_convert()` only converts columns of type 'character'. #> - `df` has no columns of type 'character'  # but an API key is needed when using \"from_created_date\" and \"from_updated_date\" fields. created_since_7d <- openalex_works_created_since(since_days = 7) #> About to crawl a total of 2 pages of results with a total of 44 records. #> Warning: `type_convert()` only converts columns of type 'character'. #> - `df` has no columns of type 'character' updated_since_1h <- openalex_works_updated_since(since_minutes = 60) #> About to crawl a total of 18 pages of results with a total of 442 records. #>  ■■■                                6% |  ETA: 32s #>  ■■■■                              11% |  ETA: 35s #>  ■■■■■■                            17% |  ETA: 31s #>  ■■■■■■■■■                         28% |  ETA: 28s #>  ■■■■■■■■■■■                       33% |  ETA: 26s #>  ■■■■■■■■■■■■■■                    44% |  ETA: 21s #>  ■■■■■■■■■■■■■■■■                  50% |  ETA: 20s #>  ■■■■■■■■■■■■■■■■■■                56% |  ETA: 17s #>  ■■■■■■■■■■■■■■■■■■■■■             67% |  ETA: 13s #>  ■■■■■■■■■■■■■■■■■■■■■■■           72% |  ETA: 11s #>  ■■■■■■■■■■■■■■■■■■■■■■■■          78% |  ETA:  9s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■        83% |  ETA:  7s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■      89% |  ETA:  5s #>  ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■     94% |  ETA:  2s  # first few rows of each of these retrievals created_since_7d |> _$work_ids |> head() |> knitr::kable() updated_since_1h |> _$work_ids |> head() |> knitr::kable()"},{"path":"https://kth-library.github.io/openalex/index.html","id":"data-source-attribution","dir":"","previous_headings":"","what":"Data source attribution","title":"Data from OpenAlex REST API","text":"data openalex displayed publicly, attribution also needs displayed:","code":"library(openalex) openalex_attribution() #> [1] \"Data source: OpenAlex API at https://api.openalex.org/\\nData license agreement: https://creativecommons.org/publicdomain/zero/1.0/\""},{"path":"https://kth-library.github.io/openalex/reference/doi_lookup_to_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup DOIs in OpenAlex and save to a database in chunks of 1000 — doi_lookup_to_duckdb","title":"Lookup DOIs in OpenAlex and save to a database in chunks of 1000 — doi_lookup_to_duckdb","text":"Lookup DOIs OpenAlex save database chunks 1000","code":""},{"path":"https://kth-library.github.io/openalex/reference/doi_lookup_to_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup DOIs in OpenAlex and save to a database in chunks of 1000 — doi_lookup_to_duckdb","text":"","code":"doi_lookup_to_duckdb(dois, dest = NULL)"},{"path":"https://kth-library.github.io/openalex/reference/doi_lookup_to_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup DOIs in OpenAlex and save to a database in chunks of 1000 — doi_lookup_to_duckdb","text":"dois character vector DOIs dest path existing wanted database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/doi_lookup_to_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup DOIs in OpenAlex and save to a database in chunks of 1000 — doi_lookup_to_duckdb","text":"file path database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openalex: Data from OpenAlex REST API — openalex-package","title":"openalex: Data from OpenAlex REST API — openalex-package","text":"OpenAlex website provides open data papers/works, venues, institutions around world CC0 license. R package provides functions access data OpenAlex REST API.","code":""},{"path":[]},{"path":"https://kth-library.github.io/openalex/reference/openalex-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openalex: Data from OpenAlex REST API — openalex-package","text":"Maintainer: Markus Skyttner markussk@kth.se","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Endpoint used for requests to OpenAlex API — openalex_api","title":"Endpoint used for requests to OpenAlex API — openalex_api","text":"Endpoint used requests OpenAlex API","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endpoint used for requests to OpenAlex API — openalex_api","text":"","code":"openalex_api()"},{"path":"https://kth-library.github.io/openalex/reference/openalex_attribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Attribution — openalex_attribution","title":"Attribution — openalex_attribution","text":"Use attribution whenever data API publicly displayed","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_attribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attribution — openalex_attribution","text":"","code":"openalex_attribution()"},{"path":"https://kth-library.github.io/openalex/reference/openalex_attribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Attribution — openalex_attribution","text":"OpenAlex provides RESTful API scholarly papers, authors, institutions, . publicly displaying data API, polite point back OpenAlex https://openalex.org/","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Counts from OpenAlex — openalex_counts","title":"Counts from OpenAlex — openalex_counts","text":"Aggregates/counts can retrieved using group_bys query parameter","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Counts from OpenAlex — openalex_counts","text":"","code":"openalex_counts(   filter = openalex_filter_default(),   dimensions = openalex_groupbys_default() )"},{"path":"https://kth-library.github.io/openalex/reference/openalex_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Counts from OpenAlex — openalex_counts","text":"filter set filter criteria, see defaults openalex_filter_default() dimensions set grouping dimensions, see defaults openalex_groupbys_default()","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Counts from OpenAlex — openalex_counts","text":"list tibbles","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_crawl.html","id":null,"dir":"Reference","previous_headings":"","what":"Crawl multiple pages of results — openalex_crawl","title":"Crawl multiple pages of results — openalex_crawl","text":"Iterates paged results showing progress bar","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_crawl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crawl multiple pages of results — openalex_crawl","text":"","code":"openalex_crawl(entity, query, verbose = FALSE, fmt = \"object\")"},{"path":"https://kth-library.github.io/openalex/reference/openalex_crawl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crawl multiple pages of results — openalex_crawl","text":"entity one values openalex_entity_enum() query openalex_query object verbose boolean indicate whether output messages process fmt return format, one \"object\" \"tables\"","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_crawl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crawl multiple pages of results — openalex_crawl","text":"R object results matching query","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_doi_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup DOIs using OpenAlex — openalex_doi_lookup","title":"Lookup DOIs using OpenAlex — openalex_doi_lookup","text":"Lookup DOIs using OpenAlex","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_doi_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup DOIs using OpenAlex — openalex_doi_lookup","text":"","code":"openalex_doi_lookup(dois, resolution = c(\"all\", \"identifiers\"))"},{"path":"https://kth-library.github.io/openalex/reference/openalex_doi_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup DOIs using OpenAlex — openalex_doi_lookup","text":"dois character vector DOIs resolution either \"\" \"identifiers\" return related identifiers","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_doi_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup DOIs using OpenAlex — openalex_doi_lookup","text":"tibble(s)","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_flatten_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten R object from deserialized nested JSON object — openalex_flatten_long","title":"Flatten R object from deserialized nested JSON object — openalex_flatten_long","text":"Flatten R object deserialized nested JSON object","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_flatten_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten R object from deserialized nested JSON object — openalex_flatten_long","text":"","code":"openalex_flatten_long(nestedlist)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_flatten_long.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten R object from deserialized nested JSON object — openalex_flatten_long","text":"nestedlist nested list lists","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_flatten_long.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten R object from deserialized nested JSON object — openalex_flatten_long","text":"tibble long format","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Use an API key for OpenAlex Premium Subscription — openalex_key","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"provides access latest data, fresher snapshots provide. also enables faster requests filtering from_created_date from_updated_date fields.","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"","code":"openalex_key(key)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"key premium subscription key","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"logical depending whether key set unset","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"Additional details... https://github.com/ourresearch/openalex-api-tutorials/blob/main/notebooks/getting-started/premium.ipynb https://docs.openalex.org/api-entities/works/filter-works#from_created_date https://docs.openalex.org/api-entities/works/filter-works#from_updated_date","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use an API key for OpenAlex Premium Subscription — openalex_key","text":"","code":"if (FALSE) { # interactive()  openalex_key(\"my_secret_api_key\")  openalex_key(\"\") }"},{"path":"https://kth-library.github.io/openalex/reference/openalex_kth_rawaff_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Example query when searching raw affiliation strings — openalex_kth_rawaff_query","title":"Example query when searching raw affiliation strings — openalex_kth_rawaff_query","text":"variant specifically tailored KTH, Royal Institute Technology includes affiliation string variations might related.","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_kth_rawaff_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example query when searching raw affiliation strings — openalex_kth_rawaff_query","text":"","code":"openalex_kth_rawaff_query()"},{"path":"https://kth-library.github.io/openalex/reference/openalex_kth_rawaff_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example query when searching raw affiliation strings — openalex_kth_rawaff_query","text":"string query","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_orcid_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup ORCiDs using OpenAlex — openalex_orcid_lookup","title":"Lookup ORCiDs using OpenAlex — openalex_orcid_lookup","text":"Lookup ORCiDs using OpenAlex","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_orcid_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup ORCiDs using OpenAlex — openalex_orcid_lookup","text":"","code":"openalex_orcid_lookup(orcids)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_orcid_lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup ORCiDs using OpenAlex — openalex_orcid_lookup","text":"orcids character vector DOIs","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_orcid_lookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup ORCiDs using OpenAlex — openalex_orcid_lookup","text":"tibble(s)","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_polite.html","id":null,"dir":"Reference","previous_headings":"","what":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","title":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","text":"Enter OpenAlex API polite pool faster requests providing email","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_polite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","text":"","code":"openalex_polite(email)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_polite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","text":"email email address, form \"@example.com\" \"\" unset email","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_polite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","text":"logical depending whether email set unset","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_polite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enter the OpenAlex API polite pool for faster requests by providing an email — openalex_polite","text":"","code":"if (FALSE) { # \\dontrun{ if(interactive()){  # to set  openalex_polite(\"you@example.com\")  # to unset  openalex_polite(\"\")  } } # }"},{"path":"https://kth-library.github.io/openalex/reference/openalex_topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Topics — openalex_topics","title":"Topics — openalex_topics","text":"Table current topics, subfields, fields domains used OpenAlex","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topics — openalex_topics","text":"","code":"openalex_topics()"},{"path":"https://kth-library.github.io/openalex/reference/openalex_work.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve work from OpenAlex REST API — openalex_work","title":"Retrieve work from OpenAlex REST API — openalex_work","text":"function retrieves works given identifier","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_work.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve work from OpenAlex REST API — openalex_work","text":"","code":"openalex_work(identifier, format = \"table\", use_random = FALSE)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_work.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve work from OpenAlex REST API — openalex_work","text":"identifier string identifier format one \"table\" \"object\" use_random logical indicate whether use random identifier, Default: FALSE","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_work.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve work from OpenAlex REST API — openalex_work","text":"per format, either tibble R object","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_work.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve work from OpenAlex REST API — openalex_work","text":"","code":"if (FALSE) { # \\dontrun{  openalex_work(use_random = TRUE)  } # }"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_created_since.html","id":null,"dir":"Reference","previous_headings":"","what":"Recently created works based on query for matching raw affiliations — openalex_works_created_since","title":"Recently created works based on query for matching raw affiliations — openalex_works_created_since","text":"function requires premium subscription API key set.","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_created_since.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recently created works based on query for matching raw affiliations — openalex_works_created_since","text":"","code":"openalex_works_created_since(   raw_search_criteria = openalex_kth_rawaff_query(),   since_days = 0 )"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_created_since.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recently created works based on query for matching raw affiliations — openalex_works_created_since","text":"raw_search_criteria raw affiliation string search criteria, default openalex_kth_rawaff_query() since_days integer indicating minutes since now","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_created_since.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recently created works based on query for matching raw affiliations — openalex_works_created_since","text":"list tables results","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_cursorcrawl.html","id":null,"dir":"Reference","previous_headings":"","what":"Crawl multipage responses from queries against the API — openalex_works_cursorcrawl","title":"Crawl multipage responses from queries against the API — openalex_works_cursorcrawl","text":"Chunks uses cursor based pagination fetch works","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_cursorcrawl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crawl multipage responses from queries against the API — openalex_works_cursorcrawl","text":"","code":"openalex_works_cursorcrawl(works_filter, n_max_pages = 5)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_cursorcrawl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crawl multipage responses from queries against the API — openalex_works_cursorcrawl","text":"works_filter works filter n_max_pages max amount pages fetch (50 per page)","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_cursorcrawl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crawl multipage responses from queries against the API — openalex_works_cursorcrawl","text":"paths downloaded files","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Use OpenAlex API for exporting data in tabular and wos formats — openalex_works_export","title":"Use OpenAlex API for exporting data in tabular and wos formats — openalex_works_export","text":"Use OpenAlex API exporting data tabular wos formats","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use OpenAlex API for exporting data in tabular and wos formats — openalex_works_export","text":"","code":"openalex_works_export(q, fmt = c(\"csv\", \"wos-plaintext\"), raw_string = FALSE)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use OpenAlex API for exporting data in tabular and wos formats — openalex_works_export","text":"q query, example \"authorships.institutions.lineage:i86987016,authorships.institutions.lineage:!i4210161097,type:types/article,primary_location.source.type:source-types/journal|source-types/conference,publication_year:2023\" fmt export format, one \"csv\" \"wos-plaintext\" \"wos-plaintext-diva\" raw_string boolean indicate whether raw string returned","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use OpenAlex API for exporting data in tabular and wos formats — openalex_works_export","text":"character vector raw string results export data frame","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_published_since.html","id":null,"dir":"Reference","previous_headings":"","what":"Recently published works based on query for matching raw affiliations — openalex_works_published_since","title":"Recently published works based on query for matching raw affiliations — openalex_works_published_since","text":"Recently published works based query matching raw affiliations","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_published_since.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recently published works based on query for matching raw affiliations — openalex_works_published_since","text":"","code":"openalex_works_published_since(   raw_search_criteria = openalex_kth_rawaff_query(),   since_days = 7 )"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_published_since.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recently published works based on query for matching raw affiliations — openalex_works_published_since","text":"raw_search_criteria raw affiliation string search criteria, default openalex_kth_rawaff_query() since_days integer indicating days back today","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_published_since.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recently published works based on query for matching raw affiliations — openalex_works_published_since","text":"list tables results","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_updated_since.html","id":null,"dir":"Reference","previous_headings":"","what":"Recently updated works based on query for matching raw affiliations — openalex_works_updated_since","title":"Recently updated works based on query for matching raw affiliations — openalex_works_updated_since","text":"function requires premium subscription API key set.","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_updated_since.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recently updated works based on query for matching raw affiliations — openalex_works_updated_since","text":"","code":"openalex_works_updated_since(   raw_search_criteria = openalex_kth_rawaff_query(),   since_minutes )"},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_updated_since.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recently updated works based on query for matching raw affiliations — openalex_works_updated_since","text":"raw_search_criteria raw affiliation string search criteria, default openalex_kth_rawaff_query() since_minutes integer indicating minutes since now","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_works_updated_since.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recently updated works based on query for matching raw affiliations — openalex_works_updated_since","text":"list tables results","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_write_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the results from a crawl as a duckdb database file — openalex_write_duckdb","title":"Export the results from a crawl as a duckdb database file — openalex_write_duckdb","text":"Export results crawl duckdb database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_write_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the results from a crawl as a duckdb database file — openalex_write_duckdb","text":"","code":"openalex_write_duckdb(crawl, destdir = NULL, append = TRUE)"},{"path":"https://kth-library.github.io/openalex/reference/openalex_write_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the results from a crawl as a duckdb database file — openalex_write_duckdb","text":"crawl results running to_tbls fcn destdir location save database file append logical, default TRUE, set FALSE overwriting existing database","code":""},{"path":"https://kth-library.github.io/openalex/reference/openalex_write_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the results from a crawl as a duckdb database file — openalex_write_duckdb","text":"file path database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/orcid_lookup_to_duckdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup ORCiDs in OpenAlex and save to a database in chunks of 100 — orcid_lookup_to_duckdb","title":"Lookup ORCiDs in OpenAlex and save to a database in chunks of 100 — orcid_lookup_to_duckdb","text":"Lookup ORCiDs OpenAlex save database chunks 100","code":""},{"path":"https://kth-library.github.io/openalex/reference/orcid_lookup_to_duckdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup ORCiDs in OpenAlex and save to a database in chunks of 100 — orcid_lookup_to_duckdb","text":"","code":"orcid_lookup_to_duckdb(orcids, dest = NULL)"},{"path":"https://kth-library.github.io/openalex/reference/orcid_lookup_to_duckdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup ORCiDs in OpenAlex and save to a database in chunks of 100 — orcid_lookup_to_duckdb","text":"orcids character vector DOIs dest path existing wanted database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/orcid_lookup_to_duckdb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup ORCiDs in OpenAlex and save to a database in chunks of 100 — orcid_lookup_to_duckdb","text":"file path database file","code":""},{"path":"https://kth-library.github.io/openalex/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kth-library.github.io/openalex/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kth-library.github.io/openalex/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kth-library.github.io/openalex/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kth-library.github.io/openalex/reference/topics.html","id":null,"dir":"Reference","previous_headings":"","what":"Topics — topics","title":"Topics — topics","text":"Topics used OpenAlex","code":""},{"path":"https://kth-library.github.io/openalex/reference/topics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Topics — topics","text":"","code":"topics"},{"path":"https://kth-library.github.io/openalex/reference/topics.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Topics — topics","text":"data frame 4516 rows 9 variables: id_topic character id topic topic character description topic description character long form description topic cluster id_subfield character id subfield topic subfield character description subfield id_field character id field field character description field id_domain character id domain domain character description domain","code":""},{"path":"https://kth-library.github.io/openalex/reference/topics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Topics — topics","text":"DETAILS","code":""},{"path":"https://kth-library.github.io/openalex/reference/wos_plaintext_for_diva.html","id":null,"dir":"Reference","previous_headings":"","what":"Function which converts a wos_plaintext-string into a format which can be uploaded to DiVA, by adding ER tags (including a blank line) after each record — wos_plaintext_for_diva","title":"Function which converts a wos_plaintext-string into a format which can be uploaded to DiVA, by adding ER tags (including a blank line) after each record — wos_plaintext_for_diva","text":"Function converts wos_plaintext-string format can uploaded DiVA, adding ER tags (including blank line) record","code":""},{"path":"https://kth-library.github.io/openalex/reference/wos_plaintext_for_diva.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function which converts a wos_plaintext-string into a format which can be uploaded to DiVA, by adding ER tags (including a blank line) after each record — wos_plaintext_for_diva","text":"","code":"wos_plaintext_for_diva(x)"},{"path":"https://kth-library.github.io/openalex/reference/wos_plaintext_for_diva.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function which converts a wos_plaintext-string into a format which can be uploaded to DiVA, by adding ER tags (including a blank line) after each record — wos_plaintext_for_diva","text":"x character string \"wos-plaintext\" format returned OpenAlex export API endpoint","code":""}]
